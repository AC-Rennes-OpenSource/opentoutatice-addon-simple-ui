<c:if test="true" xmlns:c="http://java.sun.com/jstl/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:nxu="http://nuxeo.org/nxweb/util">

	<c:if test="false">
Reusable template to display a widget label, with help message.
  
Accepted parameters:
- widget: the widget instance (required)
- isEditMode: boolean indicating if widget is in edit mode (to display
  required field indicators), optional
- hideHelp: boolean indicating if widget help should be hidden, optional
- labelStyleClass: CSS style class for the label item, optional
</c:if>

	<c:set var="doc" value="#{nxu:test(creationMode, doc, currentDocument)}" /> 

	<nxu:set var="widgetLabel"
		value="#{nxu:test(widget.translated, messages[widget.label], widget.label)}">
		<nxu:set var="widgetHelpLabel"
			value="#{nxu:test(widget.translated, messages[widget.helpLabel], widget.helpLabel)}">
			
			<c:set var="bstpCols" value="#{12 - config.getRightCols(doc)}" /> 

			<c:choose>
				<c:when test="#{widget.type == 'layout' or widget.properties.styleClass == 'layoutTitle'}">
					<c:choose>
						<c:when test="#{widget.properties.subUIGroup}">
							<label class="col-sm-#{bstpCols} control-label">#{widgetLabel}</label>
						</c:when>
						<c:otherwise>
							<div class="col-sm-12">
								<fieldset>
									<legend>
										<h:outputText value="#{widgetLabel}" />
									</legend>
								</fieldset>
							</div>
						</c:otherwise>
					</c:choose>
				</c:when>
				<c:otherwise>
					<c:choose>
						<!-- studio_header is a label widget -->
						<c:when test="#{widget.type == 'studio_header'}">
							<c:choose>
								<c:when test="#{widget.properties.styleClass == 'summaryTitle'}">
									<div class="col-sm-12">
										<fieldset>
											<legend>
												<h:outputText value="#{widgetLabel}" /> 
											</legend>
										</fieldset>
									</div>
								</c:when>
								<c:otherwise>
									<label class="col-sm-#{bstpCols} control-label" /> 
								</c:otherwise>
							</c:choose>
						</c:when>
						<c:when test="#{widget.type != 'layout'}">
							<c:choose>
							<c:when test="#{widget.properties.inSubUIGroup}">
								<label class="col-sm-12 ttc-label">#{widgetLabel}</label>
							</c:when>
							<c:otherwise>
								<label class="col-sm-#{bstpCols} control-label #{nxu:test(widget.required and isEditMode, 'required', '')}">#{widgetLabel}</label> 
							</c:otherwise>
							</c:choose>
						</c:when>
					</c:choose>
				</c:otherwise>
			</c:choose>
		</nxu:set>
	</nxu:set>

</c:if>